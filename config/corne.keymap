/*
* Copyright (c) 2020 The ZMK Contributors
*
* SPDX-License-Identifier: MIT
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include "zmk-helpers/helper.h"
#include "zmk-helpers/key-labels/42.h"
#include "zmk-helpers/unicode-chars/german.dtsi"

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5  // left hand
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 LM5 RB0 RB1 RB2 RB3 RB4 RB5  // right hand
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2  

ZMK_HOLD_TAP(hml,
    flavor = "balanced";
    tapping-term-ms = <280>;
    require-prior-idle-ms = <150>;
    hold-trigger-key-positions = <KEYS_R THUMBS>;
    hold-trigger-on-release;
    bindings = <&kp>, <&kp>;
)

ZMK_HOLD_TAP(hmr,
    flavor = "balanced";
    tapping-term-ms = <280>;
    require-prior-idle-ms = <150>;
    hold-trigger-key-positions = <KEYS_L THUMBS>;
    hold-trigger-on-release;
    bindings = <&kp>, <&kp>;
)

ZMK_LAYER(default_layer,
    &kp TAB     &kp Q         &kp W         &kp E         &kp R         &kp T           &kp Y     &kp U         &kp I         &kp O         &kp P         &kp BSPC
    &kp ESCAPE  &hrm_left LEFT_GUI A  &hrm_left LEFT_ALT S  &hrm_left LCTRL D  &hrm_left LEFT_SHIFT F  &kp G     &kp H         &hrm_right RIGHT_SHIFT J  &hrm_right RIGHT_CONTROL K  &hrm_right LEFT_ALT L  &hrm_right RIGHT_GUI SEMICOLON  &kp SINGLE_QUOTE
    &kp LEFT_SHIFT &kp Z    &kp X         &kp C         &kp V         &kp B           &kp N     &kp M         &kp COMMA     &kp DOT       &kp FSLH      &kp RIGHT_SHIFT
    &none &none &none &none &none &none
); 
