/*
* Copyright (c) 2020 The ZMK Contributors
*
* SPDX-License-Identifier: MIT
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include "zmk-helpers/helper.h"
#include "zmk-helpers/key-labels/42.h"
#include "zmk-helpers/unicode-chars/german.dtsi"

#define ___ &trans

#define DEF 0
#define NAV 1
#define NUM 2
#define SYM 3
#define MED 4
#define FNC 5

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5  // left hand

#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 LM5 RB0 RB1 RB2 RB3 RB4 RB5  // right hand
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2  

ZMK_HOLD_TAP(hml,
    flavor = "balanced";
    tapping-term-ms = <280>;
    require-prior-idle-ms = <150>;
    hold-trigger-key-positions = <KEYS_R THUMBS>;
    hold-trigger-on-release;
    bindings = <&kp>, <&kp>;
)

ZMK_HOLD_TAP(hmr,
    flavor = "balanced";
    tapping-term-ms = <280>;
    require-prior-idle-ms = <150>;
    hold-trigger-key-positions = <KEYS_L THUMBS>;
    hold-trigger-on-release;
    bindings = <&kp>, <&kp>;
)

ZMK_HOLD_TAP(layer_hold_mods, 
    bindings = <&mo>, <&kp>;
    tapping-term-ms = <200>;
    flavor = "hold-preferred";
    require-prior-idle-ms = <130>;
)

ZMK_TAP_DANCE(alt_hold,
  bindings = <&mo 4>, <&kp LEFT_ALT>;
  tapping-term-ms = <200>;
)

ZMK_STICKY_KEY(instant_stick_shift,
    quick-release;
    release-after-ms = <3000>;
    ignore-modifiers;
    bindings = <&kp>;
)

ZMK_HOLD_TAP(sticky_shift_mod_layer, 
    flavor = "tap-preferred";
    tapping-term-ms = <150>;
    bindings = <&mo>, <&instant_stick_shift>;
)

ZMK_TRI_STATE(swapper,
    bindings = <&kt LALT>, <&kp TAB>, <&kt LALT>;
    ignored-key-positions = <LT2>;
)

ZMK_TRI_STATE(swapper_mac,
    bindings = <&kt LGUI>, <&kp TAB>, <&kt LGUI>;
    ignored-key-positions = <LT2>;
)

#define SIMPLE_MORPH(NAME, MOD, BINDING1, BINDING2) \
    ZMK_MOD_MORPH(NAME, \
        mods = <(MOD_L ## MOD|MOD_R ## MOD)>; \
        bindings = <BINDING1>, <BINDING2>; \
)

SIMPLE_MORPH(qexcl, SFT, &kp QMARK, &kp EXCL)
SIMPLE_MORPH(lpar_lt, SFT, &kp LPAR, &kp LT)
SIMPLE_MORPH(rpar_gt, SFT, &kp RPAR, &kp GT)

#define ZMK_COMBO_8(NAME, TAP, KEYPOS, LAYERS, COMBO_TERM, COMBO_IDLE, HOLD, SIDE) \
    MAKE_HRM(hm_combo_ ## NAME, &kp, TAP, SIDE THUMBS) \
    ZMK_COMBO_6(NAME, &hm_combo_ ## NAME HOLD 0, KEYPOS, LAYERS, COMBO_TERM, COMBO_IDLE)

#include "combos.dtsi"

ZMK_LAYER(default_layer,
    &kp TAB         &kp Q             &kp W                 &kp E             &kp R               &kp T         &kp Y           &kp U                       &kp I                      &kp O                  &kp P                           &kp BSPC
    &kp ESCAPE      &hml LEFT_GUI A   &hml LEFT_ALT S       &hml LCTRL D      &hml LEFT_SHIFT F   &kp G         &kp H           &hmr RIGHT_SHIFT J          &hmr RIGHT_CONTROL K       &hmr LEFT_ALT L        &hmr RIGHT_GUI SEMICOLON        &kp SINGLE_QUOTE
    &kp LEFT_SHIFT  &kp Z             &kp X                 &kp C             &kp V               &kp B         &kp N           &kp M                       &kp COMMA                  &kp DOT                &kp FSLH                        &kp RIGHT_SHIFT
                                      &layer_hold_mods 4 LEFT_ALT      &sticky_shift_mod_layer 1 LEFT_SHIFT        &kp SPACE     &layer_hold_mods 3 ENTER                          &sticky_shift_mod_layer 2 RIGHT_SHIFT                 &layer_hold_mods 5 ESCAPE
)

ZMK_LAYER(nav_layer,
    &none  &none         &none         &none              &none            &none    &kp C_AC_REDO   &kp C_AC_PASTE  &kp C_AC_COPY  &kp C_AC_CUT  &kp C_AC_UNDO     &none
    &none  &kp LEFT_GUI  &kp LEFT_ALT  &kp RIGHT_CONTROL  &kp RIGHT_SHIFT  &none    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW   &kp RIGHT     &swapper          &swapper_mac
    &none  &none         &none         &none              &none            &none    &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP    &kp END       &kp INSERT        &none
                                       &none              &none            &none    &kp ENTER       &kp BACKSPACE   &kp DELETE
)

ZMK_LAYER(num_layer,
    &none  &kp LEFT_BRACKET  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp RIGHT_BRACKET    &none      &none      &none          &none             &none         &kp BACKSPACE
    &none  &kp SEMI          &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp EQUAL            &kp SPACE  &kp LSHFT  &kp LCTRL      &kp LEFT_ALT      &kp LEFT_GUI  &none
    &none  &kp GRAVE         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp BACKSLASH        &none      &none      &kp LESS_THAN  &kp GREATER_THAN  &kp FSLH      &none
                                           &kp DOT       &kp NUMBER_0  &kp MINUS            &none      &none      &none
)

ZMK_LAYER(symbol_layer,
    &none  &kp LEFT_BRACE  &kp AMPERSAND    &kp STAR              &kp LEFT_PARENTHESIS   &kp RIGHT_BRACE    &none      &none      &none          &none             &none         &kp BACKSPACE
    &none  &kp COLON       &kp DOLLAR       &kp PERCENT           &kp CARET              &kp PLUS           &kp SPACE  &kp LSHFT  &kp LCTRL      &kp LEFT_ALT      &kp LEFT_GUI  &none
    &none  &kp TILDE       &kp EXCLAMATION  &kp AT                &kp HASH               &kp PIPE           &none      &none      &kp LESS_THAN  &kp GREATER_THAN  &none         &none
                                            &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDER          &none      &none      &none
)

ZMK_LAYER(media_layer,
    &none  &none         &none     &none      &none           &none    &none           &to 0              &to 0            &none         &none  &none
    &none  &kp LEFT_GUI  &kp LALT  &kp LCTRL  &kp LEFT_SHIFT  &none    &kp C_PREVIOUS  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_NEXT    &none  &none
    &none  &none         &none     &none      &none           &none    &none           &bt BT_SEL 0       &bt BT_SEL 1     &bt BT_SEL 2  &none  &none
                                   &none      &none           &none    &kp C_STOP      &kp C_PLAY_PAUSE   &kp C_MUTE
)

ZMK_LAYER(function_layer,
    &none  &kp F12  &kp F7  &kp F8  &kp F9     &kp PRINTSCREEN    &none      &none            &none              &none          &none          &none
    &none  &kp F11  &kp F4  &kp F5  &kp F6     &kp SCROLLLOCK     &kp SPACE  &kp RIGHT_SHIFT  &kp RIGHT_CONTROL  &kp RIGHT_ALT  &kp RIGHT_GUI  &none
    &none  &kp F10  &kp F1  &kp F2  &kp F3     &kp PAUSE_BREAK    &none      &none            &none              &none          &none          &none
                            &none   &kp SPACE  &none              &none      &none            &none
)
